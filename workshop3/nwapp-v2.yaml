---
# Deployments manage the replication and maintenance of pods
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nwapp-v2-deploy
  labels:
    app: nwapp-v2

spec:
  replicas: 3
  selector:
    matchLabels:
      # Labels for the pods that this deployment is associated with
      app: nwapp-v2-pod

  template:
    metadata:
      name: nwapp-v2-pod
      labels:
        app: nwapp-v2-pod
    spec:
      containers:
        - name: nwapp-v2-container
          image: stackupiss/northwind-app:v2
          imagePullPolicy: IfNotPresent
          # Pull from a Secret defined elsewhere
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nw-secrets
                  key: MYSQL_ROOT_PASSWORD
            # Injected and displayed in `main.js`
            - name: INSTANCE_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: nw-config
          ports:
            - name: nwapp-v2-port
              containerPort: 3000

---
# Services manage ingress for the application
apiVersion: v1
kind: Service
metadata:
  name: nwapp-v2-svc
spec:
  type: ClusterIP
  selector:
    # Labels for the pods that this service routes to
    app: nwapp-v2-pod
  ports:
    - port: 80
      name: nwapp-v2-svc-p
      targetPort: nwapp-v2-port

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: nwapp-v2-ingress
  labels:
    app: nwapp
  annotations:
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "50"

spec:
  rules:
    - host: nwapp.159.89.210.183.nip.io
      http:
        paths:
          - path: /
            backend:
              serviceName: nwapp-v2-svc
              servicePort: nwapp-v2-svc-p
